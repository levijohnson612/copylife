{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","template","id","console","log","name","profession","CardList","templates","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredTemplates","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACtBC,QAAQC,IAAIP,EAAMI,SAASC,IAC5B,mCAAML,EAAMI,SAASI,KAArB,OACA,8BAAIR,EAAMI,SAASK,WAAnB,WCFSC,G,MAAW,SAACV,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACCD,EAAMW,UAAUC,KAAI,SAAAR,GAAQ,OACzB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,WCNfQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACId,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCHG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXb,UAAW,GACXU,YAAa,IALH,E,qDAWd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,UAAWkB,S,oBAO5C,WAAW,IAAD,EAC4BC,KAAKN,MAAjCb,EADA,EACAA,UAAYU,EADZ,EACYA,YACdU,EAAoBpB,EAAUqB,QAAO,SAAA5B,GAAQ,OACjDA,EAASI,KAAKyB,cAAcC,SAASb,EAAYY,kBAEnD,OACC,sBAAKhC,UAAU,MAAf,UACA,0CACD,cAAC,EAAD,CACEa,YAAY,oBACZC,aAAce,KAAKf,eACpB,cAAC,EAAD,CAAUJ,UAAWoB,W,GAjCRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bbb2b0ac.chunk.js","sourcesContent":["\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n    <img alt=\"template\" src={`https://robohash.org/${props.template.id}?set=set2&size=180x180`} />\n    {console.log(props.template.id)}\n    <h1> {props.template.name } </h1>\n    <p>{props.template.profession} </p>\n    </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\n\nexport const CardList = (props) => (\n    <div className='card-list'>\n    {props.templates.map(template => (\n        <Card key={template.id} template={template} />\n        ))}\n        </div>\n);","\nimport './search.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input\n        className='search'    \n        type='search' \n        placeholder={placeholder} \n        onChange={handleChange}\n    />\n);\n\n","//import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search/search.component.jsx';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      templates: [],\n      searchField: ''\n    }\n\n    //this.handleChange = this.handleChange.bind(this); //This is making it so handleChange can use this.setState\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ templates: users }));\n  }\n\n  handleChange = (e) => {//lexical scoping\n    this.setState({ searchField: e.target.value });\n  }\n\n  render () {\n    const { templates , searchField } = this.state; // ==  const templates = this.state.monsters\n    const filteredTemplates = templates.filter(template => \n      template.name.toLowerCase().includes(searchField.toLowerCase() // will return true if template.name matches the searchfield contents\n      ));\n    return (\n     <div className=\"App\">\n     <h1>CopyLife</h1>\n    <SearchBox \n      placeholder='Routine Templates'\n      handleChange={this.handleChange}/>\n     <CardList templates={filteredTemplates} /> \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}